#!/usr/bin/php
<?php
error_reporting(E_ALL & ~E_NOTICE);

$plugin_name = $_SERVER['argv'][0];
if(!preg_match('/\/processes_memory_([0-9]+)_(rss|vsz)$/', $plugin_name, $m)) {
    echo "invalid plugin link, must look like processes_memory_20_rss to show top 20 of rss consumers, also possible vsz: processes_memory_20_vsz\n";
    exit(1);
}
$plot = $m[1];
$type = $m[2];
$graph_name = 'processes_memory_'.$plot.'_'.$type;

// plugin config

$cmd = 'ps ax -o "pid ppid '.$type.' args"';
$list = explode("\n", shell_exec($cmd));
array_shift($list); // remove header row

// node tree

$nodes = array();

foreach($list as $l => $line) {
    $line = trim($line);
    if(!preg_match('/^([0-9]+)[ ]+([0-9]+)[ ]+([0-9]+)[ ]+(.*)$/', $line, $parts)) {
        continue;
    }
    list($m, $pid, $ppid, $mem, $args) = $parts;

    $pid = trim($pid);
    $ppid = trim($ppid);
    $mem = (int)trim($mem);
    $args = trim($args);

    $node = array(
        'pid' => $pid,
        'ppid' => $ppid,
        'mem' => $mem,
        'mem_sum' => $mem,
        'args' => $args,
        'sub' => array(),
    );
    $nodes[$pid] = $node;
}

// link parents

foreach($nodes as $pid => $node) {
    $ppid = $node['ppid'];
    if($ppid > 0) {
        $nodes[$ppid]['sub'][$pid] = &$nodes[$pid];
    }
}

function rec_sum($pid) {
    global $nodes;
    foreach(array_keys($nodes[$pid]['sub']) as $spid) {
        rec_sum($spid);
        $nodes[$pid]['mem_sum'] += $nodes[$spid]['mem_sum'];
    }
}
rec_sum(1);

// total sum of memory
// used for plotting of "other"

$mem_sum_total = 0;
foreach($nodes as $n) {
    $mem_sum_total += $n['mem'];
}

// sort children of pid 1 by memory consumption (desc)

uasort($nodes[1]['sub'], function($a, $b) {
    return $b['mem_sum']-$a['mem_sum'];
});

// pick top N

$list = array('other' => array($mem_sum_total, 'Other', 'Sum of all other Processes'));
foreach(array_slice($nodes[1]['sub'], 0, 20) as $t) {
    $process_id = 'proc_'.substr(hash('sha256', $t['args']),0,16);
    $process_label = substr($t['args'],0,30);
    $process_value = $t['mem_sum'];
    $process_info = substr($t['args'],0,60);
    $list['other'][0] -= $process_value;
    $list[$process_id]= array($process_value, $process_label, $process_info);
}

// munin plugin out

if(count($_SERVER['argv']) > 1 && $_SERVER['argv'][1] == 'config') {

    foreach($list as $process_id => $set) {

        list($process_value,$process_label,$process_info) = $set;

        echo "multigraph ".$graph_name."_".$process_id."_abs\n";
        echo "graph_args --base 1024 -l 0\n";
        echo "graph_vlabel Bytes\n";
        echo "graph_title Absolute Memory usage ($type) of $process_label\n";
        echo "graph_category memory\n";
        echo "graph_info Absolute Memory usage ($type) of $process_info\n";
        echo "graph_order $process_id\n";
        echo "$process_id.label $process_label\n";
        echo "$process_id.draw AREA\n";
        echo "$process_id.type GAUGE\n";
        echo "$process_id.colour COLOUR0\n";
        echo "$process_id.info $process_info\n";

    }

} else {

    foreach($list as $process_id => $set) {

        list($process_value,$process_label,$process_info) = $set;
        $process_value = bcmul($process_value, 1024, 0);

        echo "multigraph ".$graph_name."_".$process_id."_abs\n";
        echo "$process_id.value $process_value\n";
    }

}